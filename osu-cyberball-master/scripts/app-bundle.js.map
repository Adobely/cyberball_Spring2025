{"version":3,"sources":["../src/app.ts","../src/app.html","../src/behaviors/get-variant-value.ts","../src/enums/leave-trigger.ts","../src/environment.ts","../src/helpers.ts","../src/main.ts","../src/models/banter-model.ts","../src/models/cpu-model.ts","../src/models/cpu-settings-model.ts","../src/models/player-model.ts","../src/models/player-settings-model.ts","../src/models/settings-model.ts","../src/pages/Game/game.ts","../src/pages/Game/game.css","../src/pages/Game/game.html","../src/pages/Home/home.ts","../src/pages/Home/home.css","../src/pages/Home/home.html","../src/pages/LandingPage/LandingPage.ts","../src/pages/LandingPage/LandingPage.css","../src/pages/LandingPage/LandingPage.html","../src/pages/PresetPage/PresetPage.ts","../src/pages/PresetPage/PresetPage.css","../src/pages/PresetPage/PresetPage.html","../src/pages/Setting-Service.ts","../src/pages/message-test.ts","../src/pages/message-test.html","../src/resources/index.ts","../src/resources/phaser-game/phaser-game.ts","../src/resources/value-converters/flag-value-converter.ts","../src/resources/value-converters/integer-array-value-converter.ts","../src/resources/value-converters/integer-value-converter.ts","../src/resources/value-converters/json-value-converter.ts","../src/resources/value-converters/number-value-converter.ts","../src/scenes/cyberball.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RouterConfiguration, Router } from 'aurelia-router';\r\n\r\nexport class App {\r\n    router: Router;\r\n\r\n    configureRouter(config: RouterConfiguration, router: Router): void {\r\n        this.router = router;\r\n\r\n        config.title = 'Cyberball';\r\n\r\n        config.map([\r\n            { route: ['', 'LandingPage'], name: 'LandingPage', moduleId: 'pages/LandingPage/LandingPage' },\r\n            { route: 'home', name: 'home', moduleId: 'pages/Home/home' },\r\n            { route: 'game', name: 'game', moduleId: 'pages/Game/game' },\r\n            { route: 'PresetPage', name: 'PresetPage', moduleId: 'pages/PresetPage/PresetPage' },\r\n            { route: 'message-test', name: 'message-test', moduleId: 'pages/message-test' }\r\n        ]);\r\n\r\n    }\r\n}\r\n","<template>\r\n    <router-view></router-view>\r\n</template>\r\n","export function getVariantValue(base: number, variance: number): number {\r\n    return base + (Phaser.Math.RND.between(0, variance) * Phaser.Math.RND.sign());\r\n}\r\n","export enum LeaveTrigger {\r\n    None = 0,\r\n    Turn = 1,\r\n    Time = 1 << 1,\r\n    Ignored = 1 << 2,\r\n    OtherLeaver = 1 << 3,\r\n    TimeIgnored = 1 << 4\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","export function getCaughtBallPosition(player: Phaser.GameObjects.Sprite) {\r\n    return { x: player.x + (player.flipX ? -50 : 50), y: player.y - 15 };\r\n}\r\n\r\nexport function getActiveBallPosition(player: Phaser.GameObjects.Sprite) {\r\n    return { x: player.x + (player.flipX ? 40 : -40), y: player.y - 20 };\r\n}\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export class BanterModel {\r\n    chance: number;\r\n    delay: number;\r\n    delayVariance: number;\r\n    messages: Array<string>;\r\n}\r\n","import { CyberballScene } from 'scenes/cyberball';\r\nimport { CpuSettingsModel } from './cpu-settings-model';\r\nimport { Player } from \"./player-model\";\r\n\r\n// TODO: WIP isolate game logic into more classes.\r\nexport class Cpu extends Player {\r\n    public settings: CpuSettingsModel;\r\n\r\n    constructor(settings: CpuSettingsModel, gameReference: CyberballScene) {\r\n        super(settings, gameReference);\r\n    }\r\n}\r\n","import { BanterModel } from './banter-model';\r\nimport { PlayerSettingsModel } from './player-settings-model';\r\n\r\nexport class CpuSettingsModel extends PlayerSettingsModel {\r\n    // A set of weights for each possible target, adding up to 100%.\r\n    targetPreference: Array<number> = [50, 50];\r\n\r\n    throwDelay: number = 500;\r\n    throwDelayVariance: number = 200;\r\n\r\n    catchDelay: number = 500;\r\n    catchDelayVariance: number = 200;\r\n\r\n    introductionBanter?: BanterModel;\r\n    throwBanter?: BanterModel\r\n    catchBanter?: BanterModel\r\n    leftOutBanter?: BanterModel\r\n\r\n    boredomBanterThreshold?: number;\r\n    boredomBanter?: BanterModel;\r\n\r\n    leaveTurnChance?: number = 100;\r\n    leaveTimeChance?: number = 100;\r\n    leaveIgnoredChance?: number = 100;\r\n    leaveTimeIgnoredChance?: number = 100;\r\n    leaveOtherLeaverChance?: number = 50;\r\n\r\n    constructor(init?: Partial<CpuSettingsModel>) {\r\n        super();\r\n\r\n        if(init)\r\n            Object.assign(this, init);\r\n    }\r\n}\r\n","import { getVariantValue } from './../behaviors/get-variant-value';\r\nimport { LeaveTrigger } from 'enums/leave-trigger';\r\nimport { CyberballScene } from './../scenes/cyberball';\r\nimport { PlayerSettingsModel } from './player-settings-model';\r\n\r\n// TODO: WIP isolate game logic into more classes.\r\nexport class Player {\r\n    public settings: PlayerSettingsModel;\r\n    protected gameReference: CyberballScene\r\n\r\n    // State\r\n    public hasBall: boolean = false;\r\n    public leaveTimeThreshold: number;\r\n    public leaveIgnoreTimeThreshold: number;\r\n\r\n    // Graphics\r\n    protected group: Phaser.Physics.Arcade.Group;\r\n    public sprite: Phaser.GameObjects.Sprite;\r\n    protected nameText: Phaser.GameObjects.Text;\r\n    protected portrait: Phaser.GameObjects.Image;\r\n\r\n    constructor(settings: PlayerSettingsModel, gameReference: CyberballScene) {\r\n        this.settings = settings;\r\n        this.gameReference = gameReference;\r\n    }\r\n\r\n    public create() {\r\n        // Graphics\r\n\r\n        let position = this.getPosition();\r\n\r\n        this.group = this.gameReference.physics.add.group({ immovable: true, allowGravity: false });\r\n\r\n        // TODO: Separate spritesheet and animation from game into separate class?\r\n        this.sprite = this.group.create(position.x, position.y, 'player', 'active/1.png');\r\n\r\n        if (this.settings.tint)\r\n            this.sprite.setTint(parseInt(this.settings.tint.substring(1), 16));\r\n\r\n        this.nameText = this.gameReference.add.text(\r\n            position.x,\r\n            position.y + this.sprite.height / 2 + 10,\r\n            this.settings.name,\r\n            { fontFamily: 'Arial', color: '#000000' }\r\n        ).setOrigin(0.5);\r\n\r\n        if (this.settings.portrait) {\r\n            let portraitPosition = this.getPortraitPosition();\r\n            // TODO: Load portrait in constructor?\r\n            this.portrait = this.gameReference.add.image(portraitPosition.x, portraitPosition.y, 'playerPortrait');\r\n        }\r\n\r\n        // Triggers\r\n\r\n        if ((this.settings.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time) {\r\n            this.leaveTimeThreshold = Date.now() + getVariantValue(this.settings.leaveTime, this.settings.leaveTimeVariance) * 1000;\r\n        }\r\n\r\n        if ((this.settings.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\r\n            this.leaveIgnoreTimeThreshold = Date.now() + getVariantValue(this.settings.leaveTimeIgnored, this.settings.leaveTimeIgnoredVariance) * 1000;\r\n        }\r\n    }\r\n\r\n    // TODO: This feels gross.\r\n    protected getPosition(): Phaser.Geom.Point {\r\n        let padding = 75;\r\n\r\n        if(this.gameReference.settings.hasPortraits)\r\n            padding += this.gameReference.settings.portraitHeight + this.gameReference.settings.portraitPadding * 2;\r\n\r\n        return new Phaser.Geom.Point(\r\n            this.gameReference.sys.canvas.width / 2,\r\n            this.gameReference.sys.canvas.height - padding\r\n        );\r\n    }\r\n\r\n    protected getPortraitPosition(): Phaser.Geom.Point {\r\n        var position = this.getPosition();\r\n\r\n        return new Phaser.Geom.Point(\r\n            position.x,\r\n            position.y + this.gameReference.settings.portraitHeight / 2 + this.gameReference.settings.portraitPadding * 2 + this.sprite.height / 2 + 10\r\n        );\r\n    }\r\n}\r\n","import { LeaveTrigger } from \"enums/leave-trigger\";\r\n\r\nexport class PlayerSettingsModel {\r\n    name: string;\r\n    tint?: string;\r\n\r\n    portrait?: string;\r\n    portraitBuff?: ArrayBuffer;\r\n\r\n    /** Actions that may trigger a leave by this player. */\r\n    leaveTrigger?: LeaveTrigger = LeaveTrigger.None;\r\n\r\n    /** This player may leave after this many turns. */\r\n    leaveTurn?: number = 10;\r\n    leaveTurnVariance?: number = 2;\r\n\r\n    /** This player may leave after this much time. (Seconds) */\r\n    leaveTime?: number = 120;\r\n    leaveTimeVariance?: number = 30;\r\n\r\n    /** This player may leave after not catching the ball for this many turns. */\r\n    leaveIgnored?: number = 10;\r\n    leaveIgnoredVariance?: number = 2;\r\n\r\n    /** This player may leave after not catching the ball for this much time. (Seconds) */\r\n    leaveTimeIgnored?: number = 45;\r\n    leaveTimeIgnoredVariance?: number = 15;\r\n\r\n    /** This player may leave after this many other players leave. */\r\n    leaveOtherLeaver?: number = 2;\r\n\r\n    constructor(init?: Partial<PlayerSettingsModel>) {\r\n        if(init)\r\n            Object.assign(this, init);\r\n    }\r\n}\r\n","import { PlayerSettingsModel } from './player-settings-model';\r\nimport { CpuSettingsModel } from './cpu-settings-model';\r\n\r\nexport class SettingsModel {\r\n    player: PlayerSettingsModel = new PlayerSettingsModel();\r\n    computerPlayers: Array<CpuSettingsModel>;\r\n\r\n    // Gameplay\r\n    throwCount: number = 10;\r\n    timeLimit: number = 0;\r\n    displayTimeLimit: boolean = false;\r\n    timeLimitText: string = 'Time Limit:';\r\n    ballSpeed: number = 500;\r\n\r\n    useSchedule: boolean = false;\r\n    changeColor: boolean = false;\r\n    scheduleHonorsThrowCount: boolean = false;\r\n    schedule: Map<number, Array<number>>; \r\n    scheduleText:string;\r\n\r\n    // Graphics\r\n    baseUrl: string = './assets';\r\n\r\n    ballSprite: string = 'ball.png';\r\n    ballTint?: string;\r\n\r\n    portraitHeight: number = 75;\r\n    portraitPadding: number = 10;\r\n\r\n    get hasPortraits(): boolean | string {\r\n        return this.player.portrait || this.computerPlayers.some(cpu => cpu.portrait);\r\n    }\r\n\r\n    // Misc\r\n    chatEnabled: boolean = false;\r\n\r\n    gameOverText: string = \"Game Over\";\r\n    gameOverOpacity: number = 0.5;\r\n\r\n    constructor(init?: Partial<SettingsModel>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport const defaultSettings = new SettingsModel({\r\n    player: new PlayerSettingsModel({\r\n       name: 'Player 1'\r\n    }),\r\n    computerPlayers: [\r\n        new CpuSettingsModel({\r\n            name: 'Player 2'\r\n        }),\r\n        new CpuSettingsModel({\r\n            name: 'Player 3'\r\n        })\r\n    ]\r\n});\r\n","import { CyberballScene } from '../../scenes/cyberball';\r\nimport { defaultSettings, SettingsModel } from '../../models/settings-model';\r\nimport Phaser from 'phaser';\r\nimport { PhaserGameCustomElement } from 'resources/phaser-game/phaser-game';\r\n\r\n//     // TODO: Use events to talk to Qualtrics?\r\n//     //setTimeout(() => { window.dispatchEvent(new CustomEvent('complete', { detail: { test: 'test' } }))}, 1000)\r\n\r\n\r\nexport class GameViewModel {\r\n    settings: SettingsModel = defaultSettings;\r\n\r\n    // Game:\r\n\r\n    game: PhaserGameCustomElement;\r\n\r\n    gameWidth = 800;\r\n    gameHeight = 460;\r\n\r\n    gameConfig: Phaser.Types.Core.GameConfig;\r\n\r\n    activate(params) {\r\n        if('settings' in params) {\r\n            this.settings = new SettingsModel(JSON.parse(atob(params.settings)));\r\n        }\r\n\r\n        if('playerName' in params) {\r\n            this.settings.player.name = params.playerName;\r\n        }\r\n\r\n        if(this.settings.hasPortraits) {\r\n            this.gameHeight += this.settings.portraitHeight * 2 + this.settings.portraitPadding * 4;\r\n        }\r\n    }\r\n\r\n    bind() {\r\n        this.gameConfig  = {\r\n            type: Phaser.AUTO,\r\n            width: this.gameWidth,\r\n            height: this.gameHeight,\r\n            scene: new CyberballScene(this.settings),\r\n            physics: {\r\n                default: 'arcade'\r\n            }\r\n        };\r\n    }\r\n\r\n    // Chat:\r\n\r\n    chatMessage: string;\r\n    chatMessages: Array<{sender: string, text: string}> = [];\r\n\r\n    sendMessage() {\r\n        this.chatMessages.push({\r\n            sender: this.settings.player.name,\r\n            text: this.chatMessage\r\n        });\r\n\r\n        this.chatMessage = '';\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","canvas {\r\n    max-width: 100%;\r\n}\r\n\r\n.chat-log {\r\n    border: 1px solid black;\r\n    border-bottom: 0;\r\n    height: 100px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.chat-input {\r\n    display: flex;\r\n}\r\n\r\n.chat-input input {\r\n    flex: 1;\r\n}\r\n","<template>\r\n    <require from=\"./game.css\"></require>\r\n\r\n    <phaser-game config.bind=\"gameConfig\"></phaser-game>\r\n\r\n    <div if.bind=\"settings.chatEnabled\" class=\"chat\" css=\"width: ${gameWidth}px\">\r\n        <div class=\"chat-log\">\r\n            <div repeat.for=\"message of chatMessages\">\r\n                <strong>${message.sender}</strong>: <span>${message.text}</span>\r\n            </div>\r\n        </div>\r\n\r\n        <form class=\"chat-input\" submit.delegate=\"sendMessage()\">\r\n            <input value.bind=\"chatMessage\" />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n","import {BindingSignaler} from 'aurelia-templating-resources';\r\nimport {autoinject, bindable, computedFrom} from 'aurelia-framework';\r\nimport {SettingsModel, defaultSettings} from \"models/settings-model\";\r\nimport {CpuSettingsModel} from 'models/cpu-settings-model';\r\nimport ClipboardJS from 'clipboard';\r\n\r\n\r\nimport {SettingsService} from \"../Setting-Service\";\r\n\r\n\r\n@autoinject()\r\nexport class HomeViewModel {\r\n     activeTab = 'player';\r\n     activeCPUTab = 0;\r\n    settings: SettingsModel = defaultSettings;\r\n    clipboard: ClipboardJS;\r\n    sidebar: HTMLElement;\r\n    sidebarContent: HTMLElement;\r\n    currentSetting: string = '';\r\n    showModal: boolean = false;\r\n    presetName: string = '';\r\n    presetDescription: string = '';\r\n    showFileModal: boolean = false;  // Used to show/hide the modal\r\n    fileName: string = '';           // Stores the filename entered by the user\r\n\r\n    @bindable sliderValue = this.settings.gameOverOpacity;\r\n\r\n    updateOpacity() {\r\n        this.settings.gameOverOpacity = this.sliderValue / 100;\r\n        this.previewGame(); // Optionally, trigger a preview update\r\n    }\r\n\r\n\r\n    constructor(private signaler: BindingSignaler, private settingsService: SettingsService) {\r\n\r\n    }\r\n\r\n    getNumberOrZero(value) {\r\n        return value === null || isNaN(value) ? 0 : Number(value);\r\n    }\r\n\r\n    refreshIframe() {\r\n        this.convertStringsToNumbers(this.settings);\r\n        const iframe = document.getElementById('gamePreview') as HTMLIFrameElement | null;\r\n        if (iframe && iframe.contentWindow) {\r\n            iframe.contentWindow.location.reload();\r\n        }\r\n    }\r\n\r\n    bind() {\r\n        this.clipboard = new ClipboardJS('#copy');\r\n\r\n        setTimeout(() => {\r\n            this.previewGame();\r\n        }, 0);\r\n    }\r\n\r\n    unbind() {\r\n        this.clipboard.destroy();\r\n    }\r\n\r\n    showInfo(setting: string) {\r\n        const sidebar = this.sidebar;\r\n        const content = this.sidebarContent;\r\n\r\n        // Determine the content for the setting\r\n        let newContent = '';\r\n        switch (setting) {\r\n            case 'color':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can edit the color of the participant’s player by clicking on the box next to “Tint Color” to bring up a color palette.<br><br>'\r\n                break;\r\n            case 'playerHeader':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>This is the player the participant in your study will control.<br><br>'\r\n                break;\r\n            case 'portrait':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can insert an image that will be placed below the participant’s player. Be sure to include your image with (format dimensions).<br><br>'\r\n                break;\r\n            case 'leaveTrigger':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>By editing the “Leave Triggers” settings, you are indicating when the participant is presented with a button they can click to leave the game.<br><br>'\r\n                break;\r\n            case 'throwsElapsed':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can set the number of throws between all players before the participant is given the option to leave the game.<br><br>'\r\n                break;\r\n            case 'timeElapsed':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can set how much time has to pass before the participant is given the option to leave the game.<br><br>' +\r\n                    'Here, you will set the amount of time that has to pass before the participant is given the opportunity to leave the game. After the set amount of time has passed, a red, “next” button will appear in Qualtrics that the participant will click to leave the game. For example, if you wanted to see how soon the participant would leave after 60 seconds of being in the game, you would set the value under “Time Elapsed Leave Threshold” to 60. You also have the option to add variability to the amount of time that has to pass before the participant is given the option to leave with time elapsed variance. Let’s use a 20-second variance as an example. By placing a variance of 20 under “Variance” for our 60-second example, the games will now range from 40 to 80 seconds total before the participant is presented with a button that they can click to leave. This allows you the opportunity to lower participants’ suspicion by not giving participants the option to leave at the same time. Click for more information.'\r\n                break;\r\n            case 'throwsIgnored':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can set how many times the participant is ignored by the computer-controlled players before they are given the option to leave the game.<br><br>' +\r\n                    'Here, you will set the number of times the participant has to be ignored by the computer-controlled players before the participant is given the opportunity to leave the game. After being ignored for the set number of times has passed, a red, “next” button will appear in Qualtrics that the participant will click to leave the game.\\n' +\r\n                    '\\n' +\r\n                    'For example, if you wanted to see how soon the participant would leave after being ignored 10 times by the computer-controlled players, you would set the value under “Ignored Throws\\n' +\r\n                    '\\n' +\r\n                    'Leave Threshold” to 10. You can also use the throws ignored variance to add variability in the amount of throws participants are ignored for before the participant is given the option to leave. Let’s use a 3-throws variance as an example. By placing a variance of 3 under “Variance” for our 10-throws-ignored example, the games will now range from 7-13 throws where the participant is ignored before the participant is presented with a button that they can click to leave. This allows you the opportunity to lower participants’ suspicion by not giving participants the option to leave at the same time. Click for more information.'\r\n                break;\r\n            case 'timeIgnored':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can set how long the participant is ignored by the computer-controlled players before they are given the option to leave the game.<br><br>'\r\n                break;\r\n            case 'otherPlayersLeaving':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can set how many computer-controlled players leave the game before the participant is given the option to leave.<br><br>'\r\n                break;\r\n            case 'cpus':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>This is the computer-controlled player that your participant will play a virtual game of catch-and-toss with. You can also add additional computer-controlled players<br><br>'\r\n                break;\r\n            case 'throwDelay':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can edit how long the computer-controlled player stands in a “throw-ready” stance before they actually throw the ball<br><br>'\r\n                break;\r\n            case 'catchDelay':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can edit how long the computer-controlled player stands with the ball after catching it before they prepare to throw the ball.<br><br>'\r\n                break;\r\n            case 'targetPreference':\r\n                newContent = '<span class=\"description-header\">Brief Description:</span><br>You can edit how often the computer-controlled player throws to the participant’s player and additional CPU players you add.<br><br>'\r\n                break;\r\n\r\n            // Add more cases for other settings\r\n            default:\r\n                newContent = \"Here's some information about your settings...\";\r\n        }\r\n\r\n        // If the sidebar is open and the setting is the same as the current setting, close the sidebar\r\n        if (sidebar.classList.contains('sidebar-open') && this.currentSetting === setting) {\r\n            this.closeSidebar();\r\n            this.currentSetting = ''; // Reset the current setting\r\n            return;\r\n        }\r\n\r\n        // Update the content and the current setting\r\n        content.innerHTML = newContent;\r\n        this.currentSetting = setting;\r\n\r\n        // Open the sidebar if it's not already open\r\n        if (!sidebar.classList.contains('sidebar-open')) {\r\n            sidebar.classList.add('sidebar-open');\r\n        }\r\n    }\r\n\r\n\r\n    closeSidebar() {\r\n        this.sidebar.classList.remove('sidebar-open');\r\n    }\r\n\r\n\r\n    addCPU() {\r\n        // const iframe = document.getElementById('gamePreview') as HTMLIFrameElement;\r\n        // iframe.src = this.url;\r\n        this.settings.computerPlayers.push(new CpuSettingsModel({\r\n            name: `Player ${this.settings.computerPlayers.length + 2}`,\r\n        }));\r\n\r\n        this.settings.computerPlayers.forEach(cpu => {\r\n            while (cpu.targetPreference.length != this.settings.computerPlayers.length)\r\n                cpu.targetPreference.push(0);\r\n        });\r\n\r\n        this.activeCPUTab = this.settings.computerPlayers.length - 1;\r\n\r\n    }\r\n\r\n    removeCPU() {\r\n        // const iframe = document.getElementById('gamePreview') as HTMLIFrameElement;\r\n        // iframe.src = this.url;\r\n        if (this.settings.computerPlayers.length > 1) {\r\n            this.settings.computerPlayers.pop();\r\n\r\n            this.settings.computerPlayers.forEach(cpu => {\r\n                cpu.targetPreference.pop();\r\n            });\r\n            if (this.activeCPUTab >= this.settings.computerPlayers.length) {\r\n                this.activeCPUTab = this.settings.computerPlayers.length - 1;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    saveSettings() {\r\n        this.signaler.signal('save-settings');\r\n    }\r\n\r\n\r\n    get url() {\r\n        let url = document.location.origin + document.location.pathname;\r\n\r\n        url += '#game?settings=';\r\n        url += btoa(JSON.stringify(this.settings));\r\n\r\n        return url;\r\n    }\r\n\r\n    testGame() {\r\n        this.convertStringsToNumbers(this.settings);\r\n        window.open(this.url);\r\n    }\r\n\r\n    convertStringsToNumbers(obj) {\r\n        for (let key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                if (typeof obj[key] === 'string' && !isNaN(obj[key]) && obj[key].trim() !== '') {\r\n                    obj[key] = Number(obj[key]);\r\n                } else if (obj[key] instanceof Object) {\r\n                    this.convertStringsToNumbers(obj[key]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get clipboardText() {\r\n        return JSON.stringify(this.settings, null, 2);\r\n    }\r\n\r\n\r\n    copyIframeToClipboard(): void {\r\n        const iframeString = `<iframe id=\"cyberball\" width=\"100%\" height=\"580\" src=\"${this.url}\"></iframe>`;\r\n        navigator.clipboard.writeText(iframeString);\r\n    }\r\n\r\n    setupButtons() {\r\n        // Get the start preview button and attach the event\r\n        const startPreviewButton = document.getElementById('startPreview');\r\n        startPreviewButton.addEventListener('click', () => {\r\n            this.previewGame();\r\n        });\r\n\r\n        // Get the refresh preview button and attach the event\r\n        const refreshPreviewButton = document.getElementById('refreshPreview');\r\n        refreshPreviewButton.addEventListener('click', () => {\r\n            const iframe = document.getElementById('gamePreview') as HTMLIFrameElement;\r\n            iframe.src = 'about:blank';\r\n            setTimeout(() => {\r\n                iframe.src = this.url;\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    updateUrl() {\r\n        const iframe = document.getElementById('gamePreview') as HTMLIFrameElement;\r\n        iframe.src = this.url;\r\n    }\r\n\r\n    fileSelected(e:any) {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.readAsDataURL(file);\r\n        this.fileName = file.name;\r\n        reader.onload = () => {\r\n            console.log(reader.result);\r\n            this.settings.player.portraitBuff = reader.result as ArrayBuffer;\r\n            this.updateUrl();\r\n        };\r\n    }\r\n    cpuFileSelected(cpu:CpuSettingsModel, e:any) {\r\n        console.log(cpu);\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.readAsDataURL(file);\r\n        this.fileName = file.name;\r\n        reader.onload = () => {\r\n            console.log(reader.result);\r\n            cpu.portraitBuff = reader.result as ArrayBuffer;\r\n            this.updateUrl();\r\n        };\r\n    }\r\n\r\n\r\n    previewGame() {\r\n        // Get the URL for the game preview\r\n        const gamePreviewUrl = this.url;\r\n        // Get the iframe element\r\n        const iframe = document.getElementById('gamePreview') as HTMLIFrameElement;\r\n        // Set the iframe's source to the game preview URL\r\n        iframe.src = 'about:blank'; // Clear the iframe source\r\n        iframe.src = gamePreviewUrl; // Set the new URL\r\n    }\r\n\r\n    attached() {\r\n        if (this.settingsService.settings) {\r\n            this.settings = this.settingsService.settings;\r\n        }\r\n        this.setupButtons();\r\n        this.updatePreviewOnInputChange();\r\n    }\r\n\r\n    // ... rest of your class methods ...\r\n\r\n    updatePreviewOnInputChange() {     // alter ???????????????????????\r\n        // Get all the input elements inside the input divs\r\n        const inputElements = document.querySelectorAll('.input input');\r\n\r\n        // Attach the previewGame function to the input change event of each input element\r\n        inputElements.forEach(input => {\r\n            input.addEventListener('input', () => {\r\n                this.previewGame();\r\n            });\r\n        });\r\n    }\r\n    convertToMap(str: string): Map<number, number[]> {\r\n        const lines = str.split('\\n');\r\n        const map = new Map<number, number[]>();\r\n\r\n        for (const line of lines) {\r\n          const [key, ...values] = line.split(',').map(Number);\r\n          map.set(key, values);\r\n        }\r\n\r\n        return map;\r\n      }\r\n\r\n    nextTab() {\r\n        if (this.activeTab === 'player') {\r\n            this.activeTab = 'cpus';\r\n            this.settings.computerPlayers.forEach(cpu => {\r\n                cpu.portrait = \"\";\r\n            });\r\n        } else if (this.activeTab === 'cpus') {\r\n            this.activeTab = 'gameplay';\r\n        } else if (this.activeTab === 'gameplay') {\r\n\r\n            this.activeTab = 'buttons';\r\n        }\r\n        this.closeSidebar();\r\n    }\r\n\r\n    previousTab() {\r\n        if (this.activeTab === 'buttons') {\r\n            this.activeTab = 'gameplay';\r\n        } else if (this.activeTab === 'gameplay') {\r\n            this.activeTab = 'cpus';\r\n            this.settings.computerPlayers.forEach(cpu => {\r\n                cpu.portrait = \"\";\r\n            });\r\n        } else if (this.activeTab === 'cpus') {\r\n            this.activeTab = 'player';\r\n        }\r\n        this.closeSidebar();\r\n    }\r\n\r\n    @computedFrom('settings', 'settings.player', 'settings.computerPlayers', 'settings.someOtherProperty', 'settings.anotherProperty')\r\n    get settingsForPreview() {\r\n        return this.settings; // Include all relevant settings properties here\r\n    }\r\n\r\n\r\n    // Add these methods to your HomeViewModel class\r\n\r\n    saveSettingsToLocalStorage() {\r\n        this.showModal = true; // Show the modal when \"Save to Preset\" is clicked\r\n    }\r\n\r\n    cancelSave() {\r\n        this.showModal = false; // Hide the modal when \"Cancel\" is clicked\r\n        this.presetName = ''; // Clear the preset name\r\n        this.presetDescription = ''; // Clear the preset description\r\n    }\r\n\r\n    confirmSave() {\r\n        if (this.presetName.trim() === '') {\r\n            alert('Please enter a preset name.');\r\n            return;\r\n        }\r\n\r\n        // Save to local storage\r\n        const presetData = {\r\n            description: this.presetDescription,\r\n            settings: this.settings\r\n        };\r\n        localStorage.setItem(this.presetName, JSON.stringify(presetData));\r\n\r\n        this.showModal = false; // Hide the modal after saving\r\n        this.presetName = ''; // Clear the preset name\r\n        this.presetDescription = ''; // Clear the preset description\r\n    }\r\n\r\n    public saveSettingsToFile(): void {\r\n        this.showFileModal = true;  // Show the file modal when \"Save to File\" is clicked\r\n    }\r\n\r\n    cancelFileSave() {\r\n        this.showFileModal = false;   // Hide the file modal when \"Cancel\" is clicked\r\n        this.fileName = '';           // Clear the filename\r\n    }\r\n\r\n    // public saveSettingsToFile(): void {\r\n    //     const settingsString = JSON.stringify(this.settings, null, 2); // Pretty print the JSON\r\n    //     const blob = new Blob([settingsString], { type: 'text/plain;charset=utf-8' });\r\n    //\r\n    //     const a = document.createElement('a');\r\n    //     const url = window.URL.createObjectURL(blob);\r\n    //     a.href = url;\r\n    //     a.download = 'settings.txt';\r\n    //     document.body.appendChild(a);\r\n    //     a.click();\r\n    //     window.URL.revokeObjectURL(url);\r\n    //     document.body.removeChild(a);\r\n    // }\r\n\r\n    confirmFileSave() {\r\n        if (this.fileName.trim() === '') {\r\n            alert('Please enter a file name.');\r\n            return;\r\n        }\r\n\r\n        const settingsString = JSON.stringify(this.settings, null, 2);\r\n        const blob = new Blob([settingsString], {type: 'text/plain;charset=utf-8'});\r\n\r\n        const a = document.createElement('a');\r\n        const url = window.URL.createObjectURL(blob);\r\n        a.href = url;\r\n        // Add .txt extension if not provided\r\n        a.download = this.fileName.endsWith('.txt') ? this.fileName : `${this.fileName}.txt`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n\r\n        // After saving, reset the values and close the modal\r\n        this.showFileModal = false;\r\n        this.fileName = '';\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Example usage:\r\n// Call this function when a button is clicked or any other event is triggered\r\n    // sendEmailWithVariable('This is the variable value');\r\n\r\n\r\n}\r\n","\r\n\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background-color: #f7f7f7;\r\n    color: #181818;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\niframe {\r\n    transform: scale(3) translate(-50px, -50px);\r\n    transform-origin: 100px 100px;\r\n}\r\n\r\n.container {\r\n    text-align: center;\r\n    background-color: #ffffff;\r\n    padding: 50px;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    position: relative;\r\n    /*//width: 80%; !* This is the current width setting, which is responsive *!*/\r\n    max-width: 400px; /* This is the maximum width it can grow to */\r\n    min-width: 400px; /* This is the minimum width it can shrink to */\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    padding: 8px 16px;\r\n}\r\n\r\na:hover {\r\n    background-color: #9d9d9d;\r\n    color: black;\r\n}\r\n\r\n.previous {\r\n    background-color: #ddd;\r\n    color: black;\r\n    position: absolute;\r\n    top: 50%;  /* This will center the button vertically */\r\n    left: 0;  /* This will make the button hug the left wall */\r\n    transform: translateY(-50%); /* This will ensure the button is truly vertically centered */\r\n    left: 6px;\r\n}\r\n\r\n.next {\r\n\r\n    background-color: #ddd;\r\n    color: black;\r\n    position: absolute;\r\n    top: 50%;  /* This will center the button vertically */\r\n    right: 0;  /* This will make the button hug the right wall */\r\n    transform: translateY(-50%); /* This will ensure the button is truly vertically centered */\r\n    right: 6px;\r\n}\r\n\r\n.round {\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n.landing-page {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    background-color: #f7f7f7;\r\n}\r\n\r\n.container {\r\n    text-align: center;\r\n    background-color: #ffffff;\r\n    padding: 50px;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    position: relative;\r\n    width: 80%;\r\n    max-width: 1200px;\r\n}\r\n\r\n.input {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n\r\n\r\n.input label {\r\n    flex: 1; /* Allow label to grow as needed */\r\n    text-align: left; /* Left-align the label text */\r\n    margin-right: 10px; /* Space between the label and the input */\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.input input[type=\"number\"] {\r\n    flex: 1; /* Allow input to take up the remaining space */\r\n    max-width: 200px; /* Remove max-width to allow it to grow */\r\n\r\n}\r\n\r\n.input input[type=\"text\"] {\r\n    flex: 1; /* Allow input to take up the remaining space */\r\n    max-width: 200px; /* Remove max-width to allow it to grow */\r\n\r\n}\r\n\r\n.input input[type=\"checkbox\"] {\r\n   margin-right: 185px;\r\n\r\n}\r\n\r\n.input input[type=\"color\"] {\r\n    margin-right: 150px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.input input[type=\"range\"] {\r\n    margin-right: 30px;\r\n\r\n}\r\n\r\n.range-container {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.range-value {\r\n    margin-left: 2px; /* Add some spacing between the range input and the value */\r\n}\r\n\r\n.button-container {\r\n    display: flex;\r\n    flex-direction: column; /* Stack items vertically */\r\n    align-items: center; /* Center items horizontally */\r\n}\r\n\r\n.button-container button {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n\r\n.tooltip-icon {\r\n    margin-right: 1px;\r\n}\r\n\r\n.input-label{\r\n    margin-bottom: 1px;\r\n}\r\n\r\n.h2-tooltip {\r\n    font-size: 1rem;\r\n    vertical-align: middle;\r\n}\r\n\r\n.input label + * {\r\n    box-sizing: border-box;\r\n    max-width: 300px;\r\n}\r\n\r\n.description-header {\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n    margin-bottom: 8px; /* Add space below the headers */\r\n    display: block; /* Ensure each header is on a new line */\r\n}\r\n\r\n.input input[type=text], .input input[type=number], textarea {\r\n    flex: 1 1 100%;\r\n    min-width: 0;\r\n    width: auto;\r\n}\r\n\r\n.column {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.target-preference-inputs {\r\n    display: flex;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.bottom-buttons {\r\n    background-color: #007BFF;\r\n    color: #FFFFFF;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.refresh-button {\r\n    position: absolute;      /* Positioning relative to the container */\r\n    bottom: 10px;            /* Distance from the bottom */\r\n    left: 10px;              /* Distance from the left */\r\n    background-color: #007BFF;\r\n    color: #FFFFFF;\r\n    padding: 5px 10px;       /* Smaller padding */\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 14px;         /* Smaller font size */\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n}\r\n\r\n.bottom-buttons:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.bottom-buttons:active {\r\n    background-color: #003d80;\r\n}\r\n\r\n.bottom-buttons:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.5);\r\n}\r\n.tabs {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    /* This will ensure the tabs are displayed horizontally and new tabs are added to the left */\r\n    padding: 0;\r\n    margin: 0;\r\n    align-items: flex-start; /* This ensures the tabs hug the top of the container */\r\n}\r\n\r\n\r\n.tablinks:first-child {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n}\r\n\r\n.tablinks {\r\n    padding: 10px 15px;\r\n    margin-bottom: -2px;\r\n    border: 1px solid #ccc;\r\n    border-bottom: none;\r\n    cursor: pointer;\r\n    background-color: #e0e0e0;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.tablinks:not(:last-child) {\r\n    margin-right: 5px;\r\n}\r\n\r\n.tablinks:hover {\r\n    background-color: #d0d0d0;\r\n}\r\n\r\n.tablinks.active {\r\n    background-color: #007BFF;\r\n    font-weight: bold;\r\n    border-color: #007BFF;\r\n    color: white;\r\n}\r\n\r\n.bottom-buttons.disabled {\r\n    background-color: #a5a5a5;\r\n    cursor: not-allowed;\r\n    pointer-events: none;\r\n    color: #777777;\r\n}\r\n\r\n.tablinks:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.5);\r\n}\r\n\r\niframe {\r\n    pointer-events: auto;\r\n}\r\n\r\n.tooltip-icon {\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #007BFF;\r\n    color: #FFFFFF;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.cpuButtons{\r\n    margin-bottom: 10px;\r\n}\r\n.configHeader{\r\n    text-align: center;\r\n}\r\n\r\n.sidebar {\r\n    position: fixed;\r\n    top: 0;\r\n    right: -340px;\r\n    width: 300px;\r\n    height: 100%;\r\n    background-color: #FFFFFF;\r\n    padding: 20px;\r\n    transition: right 0.3s;\r\n    z-index: 1000;\r\n    color: #050505;\r\n}\r\n\r\n.close-btn {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: #FF0000;\r\n    color: #FFFFFF;\r\n    border: none;\r\n    border-radius: 50%;\r\n    width: 25px;\r\n    height: 25px;\r\n    text-align: center;\r\n    line-height: 25px;\r\n    cursor: pointer;\r\n}\r\n\r\n.sidebar-open {\r\n    right: 0;\r\n}\r\n\r\n.modal {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 2000;\r\n}\r\n\r\n.modal-content {\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    width: 80%;\r\n    max-width: 400px;\r\n}\r\n\r\n.modal-buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n}\r\n","<template>\r\n    <require from=\"resources/value-converters/json-value-converter\"></require>\r\n    <require from=\"resources/value-converters/integer-value-converter\"></require>\r\n    <require from=\"resources/value-converters/number-value-converter\"></require>\r\n    <require from=\"resources/value-converters/integer-array-value-converter\"></require>\r\n    <require from=\"resources/value-converters/flag-value-converter\"></require>\r\n    <require from=\"./home.css\"></require>\r\n    <require from=\"../LandingPage/LandingPage.css\"></require>\r\n\r\n    <div class=\"landing-page\">\r\n\r\n        <div>\r\n            <img src=\"../../../assets/player.png\" alt=\"Cyberball Sprite\" class=\"welcome-image\">\r\n            <h1 class=\"configHeader\">Cyberball Configuration Builder</h1>\r\n            <div class=\"flex-container\">\r\n                <div class=\"iframe-wrapper\">\r\n                <iframe id=\"gamePreview\"></iframe>\r\n            </div>\r\n            <div class=\"container\">\r\n\r\n                <!-- Player Tab -->\r\n                <div if.bind=\"activeTab === 'player'\" class=\"tabcontent\">\r\n\r\n                    <h2>Human <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('playerHeader')\">?</span>\r\n                    </h2>\r\n                    <div style=\"position: relative; z-index: 1;\">\r\n\r\n                    <div class=\"input\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" value.bind=\"settings.player.name\" change.delegate=\"updateUrl()\"/>\r\n\r\n                    </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Portrait <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('portrait')\">?</span></label>\r\n                            <input type=\"file\" value.bind=\"settings.player.portrait\" input.delegate=\"updateUrl()\" change.delegate=\"fileSelected($event)\">\r\n                        </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Tint Color <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('color')\">?</span></label>\r\n                        <input type=\"color\" value.bind=\"settings.player.tint\" input.delegate=\"updateUrl()\"\r\n                               change.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <h2>Leave Triggers <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('leaveTrigger')\">?</span></h2>\r\n                    <div class=\"column\">\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:1\" input.delegate=\"updateUrl()\"/>\r\n                            Throws Elapsed <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('throwsElapsed')\">?</span>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:2\" input.delegate=\"updateUrl()\"/>\r\n                            Time\r\n                            Elapsed\r\n                            <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('timeElapsed')\">?</span>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:4\" input.delegate=\"updateUrl()\"/>\r\n                            Throws Ignored\r\n                            <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('throwsIgnored')\">?</span>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:16\" input.delegate=\"updateUrl()\"/>\r\n                            Time\r\n                            Ignored\r\n                            <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('timeIgnored')\">?</span>\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"checkbox\"\r\n                                   checked.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:8\" input.delegate=\"updateUrl()\"/>\r\n                            Other\r\n                            Players Leaving\r\n                            <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('otherPlayersLeaving')\">?</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:1\">\r\n                        <label>Throws Elapsed Leave Threshold/Variance</label>\r\n\r\n                        <div>\r\n                            <input type= \"number\" value.bind=\"settings.player.leaveTurn\" input.delegate=\"updateUrl()\"/>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveTurnVariance\"  input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:2\">\r\n                        <label>Time Elapsed Leave (s) Threshold/Variance (s)</label>\r\n\r\n                        <div>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveTime\" input.delegate=\"updateUrl()\"/>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveTimeVariance\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:4\">\r\n                        <label>Ignored Throws Leave Threshold/Variance</label>\r\n\r\n                        <div>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveIgnored\" input.delegate=\"updateUrl()\"/>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveIgnoredVariance\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:16\">\r\n                        <label>Ignored Time Leave (ms) Threshold/Variance (ms)</label>\r\n\r\n                        <div>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveTimeIgnored\" input.delegate=\"updateUrl()\"/>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveTimeIgnoredVariance\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"column\" if.bind=\"settings.player.leaveTrigger | flag:settings.player.leaveTrigger:8\">\r\n                        <label>Others Left Leave Threshold</label>\r\n\r\n                        <div>\r\n                            <input type=\"number\" value.bind=\"settings.player.leaveOtherLeaver\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    <button class=\"refresh-button\" click.delegate=\"refreshIframe()\">Refresh Iframe</button>\r\n</div>\r\n                <!-- CPUs Tab -->\r\n                <div if.bind=\"activeTab === 'cpus'\" class=\"tabcontent\">\r\n                    <div class=\"tab\">\r\n                        <button repeat.for=\"cpu of settings.computerPlayers\"\r\n                                class=\"tablinks ${$index === activeCPUTab ? 'active' : ''}\"\r\n                                click.delegate=\"activeCPUTab = $index\">\r\n                            Player ${$index + 2}\r\n                        </button>\r\n                    </div>\r\n                    <h2>\r\n                        CPUs <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('cpus')\">?</span>\r\n                    </h2>\r\n                    <div class=\"cpuButtons\">\r\n                        <button class=\"bottom-buttons\" click.delegate=\"addCPU()\">+ Add CPU</button>\r\n                        <button class=\"bottom-buttons ${settings.computerPlayers.length == 1 ? 'disabled' : ''}\"\r\n                                click.delegate=\"removeCPU()\">- Remove CPU\r\n                        </button>\r\n                    </div>\r\n\r\n                    <!-- Sub-tabs for each CPU -->\r\n\r\n\r\n                    <!-- Details for each CPU -->\r\n                    <div repeat.for=\"cpu of settings.computerPlayers\" if.bind=\"$index === activeCPUTab\">\r\n                        <div class=\"input\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" value.bind=\"cpu.name\" input.delegate=\"previewGame()\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Tint Color <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('color')\">?</span> </label>\r\n                            <input type=\"color\" value.bind=\"cpu.tint\" input.delegate=\"updateUrl()\"\r\n                                   change.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Portrait <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('portrait')\">?</span></label>\r\n                            <input type=\"file\" value.bind=\"cpu.portrait\" input.delegate=\"updateUrl()\" change.delegate=\"cpuFileSelected(cpu,$event)\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Throw Delay (ms) <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('throwDelay')\">?</span></label>\r\n                            <input type=\"number\" value.bind=\"cpu.throwDelay\" placeholder=\"Enter delay in milliseconds\" class=\"ms-input\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Throw Delay Variance (ms)</label>\r\n                            <input type=\"number\" value.bind=\"cpu.throwDelayVariance\" placeholder=\"Enter delay in milliseconds\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Catch Delay (ms) <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('catchDelay')\">?</span></label>\r\n                            <input type=\"number\" value.bind=\"cpu.catchDelay\" placeholder=\"Enter delay in milliseconds\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n                        <div class=\"input\">\r\n                            <label>Catch Delay Variance (ms) </label>\r\n                            <input type=\"number\" value.bind=\"cpu.catchDelayVariance\" placeholder=\"Enter delay in milliseconds\" input.delegate=\"updateUrl()\"/>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"input\">\r\n                            <label>Target Preference <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('targetPreference')\">?</span></label>\r\n\r\n                            <div>\r\n                                <input repeat.for=\"target of cpu.targetPreference\" type=\"number\"\r\n                                       value.bind=\"cpu.targetPreference[$index]\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <h2>Leave Triggers <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('leaveTrigger')\">?</span></h2>\r\n                        <div class=\"column\">\r\n                            <label>\r\n                                <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:1\" input.delegate=\"updateUrl()\"/>\r\n                                Throws\r\n                                Elapsed\r\n                                <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('throwsElapsed')\">?</span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:2\" input.delegate=\"updateUrl()\"/> Time\r\n                                Elapsed\r\n                                <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('timeElapsed')\">?</span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:4\" input.delegate=\"updateUrl()\"/>\r\n                                Throws\r\n                                Ignored\r\n                                <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('throwsIgnored')\">?</span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:16\" input.delegate=\"updateUrl()\"/> Time\r\n                                Ignored\r\n                                <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('timeIgnored')\">?</span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" checked.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:8\" input.delegate=\"updateUrl()\"/> Other\r\n                                Players Leaving\r\n                                <span class=\"tooltip-icon h2-tooltip\" click.delegate=\"showInfo('otherPlayersLeaving')\">?</span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:1\">\r\n                            <label>Throws Elapsed Leave Threshold/Variance/Chance</label>\r\n\r\n                            <div>\r\n                                <input type='number' value.bind=\"cpu.leaveTurn\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTurnVariance\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTurnChance\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:2\">\r\n                            <label>Time Elapsed Leave (s) Threshold/Variance/Chance (s)</label>\r\n\r\n                            <div>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTime\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTimeVariance\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTimeChance\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:4\">\r\n                            <label>Ignored Throws Leave Threshold/Variance/Chance</label>\r\n\r\n                            <div>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveIgnored\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveIgnoredVariance\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveIgnoredChance\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:16\">\r\n                            <label>Ignored Time Leave (ms) Threshold/Variance/Chance (ms)</label>\r\n\r\n                            <div>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTimeIgnored\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTimeIgnoredVariance\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveTimeIgnoredChance\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"column\" if.bind=\"cpu.leaveTrigger | flag:cpu.leaveTrigger:8\">\r\n                            <label>Others Left Leave Threshold/Chance</label>\r\n\r\n                            <div>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveOtherLeaver\" input.delegate=\"updateUrl()\"/>\r\n                                <input type=\"number\" value.bind=\"cpu.leaveOtherLeaverChance\" input.delegate=\"updateUrl()\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <button class=\"refresh-button\" click.delegate=\"refreshIframe()\">Refresh Iframe</button>\r\n                </div>\r\n\r\n                <!-- Gameplay Tab -->\r\n                <div if.bind=\"activeTab === 'gameplay'\" class=\"tabcontent\">\r\n                    <h2>Gameplay</h2>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Throw Count</label>\r\n                        <input type=\"number\" value.bind=\"settings.throwCount\" />\r\n                    </div>\r\n\r\n\r\n                    <div class=\"input\">\r\n                        <label>Time Limit (ms) </label>\r\n                        <input type=\"number\" value.bind=\"settings.timeLimit\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Display Time Limit</label>\r\n                        <input type=\"checkbox\" checked.bind=\"settings.displayTimeLimit\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Time Limit Label</label>\r\n                        <input type=\"text\" value.bind=\"settings.timeLimitText\"  input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Ball Speed</label>\r\n                        <input type=\"number\" value.bind=\"settings.ballSpeed\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Ball Tint Color</label>\r\n                        <input type=\"color\" value.bind=\"settings.ballTint\"  input.delegate=\"updateUrl()\"\r\n                               change.delegate=\"updateUrl()\"/>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Portrait Height (px)</label>\r\n                        <input type=\"number\" value.bind=\"settings.portraitHeight\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Use Schedule</label>\r\n                        <input type=\"checkbox\" checked.bind=\"settings.useSchedule\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\" if.bind=\"settings.useSchedule\">\r\n                        <label>Schedule</label>\r\n                        <!-- <textarea value.bind=\"settings.schedule | integerArray & updateTrigger:'blur'\"></textarea> -->\r\n                        <textarea value.bind=\"settings.scheduleText  & updateTrigger:'blur'\"></textarea>\r\n                    </div>\r\n\r\n                    <div class=\"input\" >\r\n                        <label>Change Color</label>\r\n                        <!-- <textarea value.bind=\"settings.schedule | integerArray & updateTrigger:'blur'\"></textarea> -->\r\n                        <input type=\"checkbox\" checked.bind=\"settings.changeColor\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Schedule Honors Throw Count</label>\r\n                        <input type=\"checkbox\" checked.bind=\"settings.scheduleHonorsThrowCount\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Game Over Text</label>\r\n                        <input type=\"text\" value.bind=\"settings.gameOverText\" input.delegate=\"updateUrl()\"/>\r\n                    </div>\r\n\r\n                    <div class=\"input\">\r\n                        <label>Game Over Opacity (%)</label>\r\n                        <div class=\"range-container\">\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"0\"\r\n                                max=\"100\"\r\n                                step=\"1\"\r\n                                value.bind=\"sliderValue\"\r\n                                change.delegate=\"updateOpacity()\"\r\n                            />\r\n                            <span class=\"range-value\">${sliderValue}%</span>\r\n                        </div>\r\n                        <button class=\"refresh-button\" click.delegate=\"refreshIframe()\">Refresh Iframe</button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div if.bind=\"activeTab === 'buttons'\" class=\"tabcontent\">\r\n\r\n                        <div class=\"button-container\">\r\n                            <button class=\"bottom-buttons\" click.delegate=\"testGame()\">&#129514; Run Game</button>\r\n                            <button class=\"bottom-buttons\" click.delegate=\"saveSettingsToLocalStorage()\">&#128190; Save To Preset</button>\r\n                            <button class=\"bottom-buttons\" click.delegate=\"saveSettingsToFile()\">&#128190; Save To File</button>\r\n                            <button class=\"bottom-buttons\" click.delegate=\"copyIframeToClipboard()\">&#10697; Copy Link</button>\r\n                        </div>\r\n\r\n\r\n                    <button class=\"refresh-button\" click.delegate=\"refreshIframe()\">Refresh Iframe</button>\r\n                </div>\r\n                <div class=\"navigation-buttons\">\r\n                    <a href=\"#\" if.bind=\"activeTab !== 'player'\" class=\"previous round\" click.delegate=\"previousTab()\">\r\n                        &#8249;\r\n                    </a>\r\n\r\n                    <!-- Next Button: Only show if on 'player', 'cpus', or 'gameplay' -->\r\n                    <a href=\"#\" if.bind=\"activeTab !== 'buttons'\" class=\"next round\" click.delegate=\"nextTab()\">\r\n                        &#8250;\r\n                    </a>\r\n                </div>\r\n\r\n            </div>\r\n</div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"modal\" if.bind=\"showFileModal\">\r\n        <div class=\"modal-content\">\r\n            <h2>Save to File</h2>\r\n            <div class=\"input\">\r\n                <label>File Name:</label>\r\n                <input type=\"text\" value.bind=\"fileName\" placeholder=\"Enter filename\">\r\n            </div>\r\n            <div class=\"modal-buttons\">\r\n                <button click.delegate=\"cancelFileSave()\">Cancel</button>\r\n                <button click.delegate=\"confirmFileSave()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"modal\" if.bind=\"showModal\">\r\n        <div class=\"modal-content\">\r\n            <h2>Save as Preset</h2>\r\n            <div class=\"input\">\r\n                <label>Preset Name:</label>\r\n                <input type=\"text\" value.bind=\"presetName\">\r\n            </div>\r\n            <div class=\"input\">\r\n                <label>Description:</label>\r\n                <textarea value.bind=\"presetDescription\"></textarea>\r\n            </div>\r\n            <div class=\"modal-buttons\">\r\n                <button click.delegate=\"cancelSave()\">Cancel</button>\r\n                <button click.delegate=\"confirmSave()\">Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"sidebar\" ref=\"sidebar\">\r\n        <button class=\"close-btn\" click.delegate=\"closeSidebar()\">X</button>\r\n        <h2>Information</h2>\r\n        <p ref=\"sidebarContent\">Here's some information about your settings...</p>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n\r\n\r\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class LandingPage {\r\n    router: Router;\r\n    constructor(router) {\r\n        this.router = router;\r\n    }\r\n\r\n    startFromScratch() {\r\n        // Navigate to the home route\r\n        console.log(this.router);\r\n        this.router.navigateToRoute('home');\r\n    }\r\n\r\n    loadPreset() {\r\n        // Logic to load a preset\r\n        console.log(this.router);\r\n        this.router.navigateToRoute('PresetPage');\r\n    }\r\n\r\n    openManual() {\r\n        // Logic to open the manual\r\n        console.log(\"Opening manual...\");\r\n    }\r\n}\r\n\r\n\r\n",".landing-page {\r\n    font-family: Arial, sans-serif;\r\n    height: 100vh;\r\n    margin: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #f7f7f7;\r\n    position: relative; /* Added for positioning */\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n    align-items: start; /* Align items to the top */\r\n    justify-content: center;\r\n    border: none;\r\n}\r\n\r\n#gamePreview:focus {\r\n    outline: none;\r\n}\r\n\r\n#gamePreview, .iframe-wrapper {\r\n    box-shadow: none;\r\n}\r\n\r\n\r\n#gamePreview, .iframe-wrapper {\r\n    background-color: transparent;\r\n}\r\n\r\n\r\n\r\n.landing-page .container {\r\n    /*text-align: center;*/\r\n    /*background-color: #ffffff;*/\r\n    /*padding: 50px;*/\r\n    /*border-radius: 10px;*/\r\n    /*box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);*/\r\n    /*position: relative; !* Added for positioning *!*/\r\n    position: relative;\r\n    text-align: center;\r\n    background-color: #ffffff;\r\n    padding: 50px;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.iframe-wrapper {\r\n    border: none;\r\n    position: absolute;\r\n    left: 450px;\r\n    top: 700px;\r\n    height: 50%; /* Half the height of the container */\r\n    width: 300px/* Your desired width */;\r\n}\r\n\r\n#gamePreview {\r\n    border: none;\r\n    height: 50%; /* Make iframe take full height of its parent */\r\n    width: 50%; /* Make iframe take full width of its parent */\r\n}\r\n\r\n.landing-page .welcome-image {\r\n    width: 100%;\r\n    max-width: 300px;\r\n    margin-bottom: 20px;\r\n    position: relative; /* Position the image relative to its parent (.landing-page) */\r\n    display: block; /* Ensure the image takes its own block-level space */\r\n    margin: 0 auto; /* Center the image horizontally within .landing-page */\r\n}\r\n\r\n\r\n.landing-page h1 {\r\n    margin-bottom: 30px;\r\n    color: #333;\r\n}\r\n\r\n.landing-page .btn {\r\n    display: inline-block;\r\n    padding: 10px 20px;\r\n    margin: 5px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    background-color: #007BFF;\r\n    color: #ffffff;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    text-decoration: none;\r\n}\r\n\r\n.landing-page .btn:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n","<template>\r\n    <require from=\"./LandingPage.css\"></require>\r\n\r\n    <div class=\"landing-page\">\r\n        <head>\r\n            <meta charset=\"UTF-8\">\r\n\r\n            <title>Welcome to Cyberball</title>\r\n        </head>\r\n        <body>\r\n        <div>\r\n        <img src=\"../../../assets/player.png\" alt=\"Cyberball Sprite\">\r\n        <div class=\"container\">\r\n            <h1>Welcome to Cyberball</h1>\r\n\r\n            <!-- Replace '#' in href with the actual path to your pages -->\r\n            <a click.delegate=\"startFromScratch()\" class=\"btn\">Start From Scratch</a>\r\n            <a click.delegate=\"loadPreset()\" class=\"btn\">Load Preset</a>\r\n            <a href=\"#\" class=\"btn\">Manual</a>\r\n        </div>\r\n        </div>\r\n        </body>\r\n    </div>\r\n</template>\r\n","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport {SettingsService} from \"../Setting-Service\";\r\n\r\n@autoinject()\r\nexport class PresetPage {\r\n    presets: Array<{name: string, description: string, settings: any}> = [];\r\n    public activeTab: string = 'presets';\r\n    settings: any;\r\n\r\n    constructor(private router: Router, private settingsService: SettingsService) {}\r\n\r\n\r\n    public get isLoadFromFile(): boolean {\r\n        return this.activeTab === 'load-file';\r\n    }\r\n\r\n    attached() {\r\n        console.log(\"attached method called\");\r\n        this.loadPresetsFromLocalStorage();\r\n    }\r\n\r\n    public loadPresetsFromLocalStorage(): void {\r\n        console.log(\"Number of items in localStorage:\", localStorage.length);\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            const key = localStorage.key(i);\r\n            const value = localStorage.getItem(key);\r\n            if (value) {\r\n                const presetData = JSON.parse(value);\r\n                this.presets.push({\r\n                    name: key,\r\n                    description: presetData.description || 'No description provided',\r\n                    settings: presetData.settings\r\n                });\r\n            }\r\n        }\r\n        console.log(\"Presets array:\", this.presets);\r\n\r\n    }\r\n\r\n    public loadPresetAndNavigate(presetName: string): void {\r\n        const presetData = localStorage.getItem(presetName);\r\n        if (presetData) {\r\n            const parsedData = JSON.parse(presetData);\r\n            this.settingsService.settings = parsedData.settings; // Update the settings in the service\r\n            this.navigateToPage();\r\n        }\r\n    }\r\n\r\n    public showTab(tabId: string): void {\r\n        console.log(\"Is Your Presets Active?\", this.isYourPresetsActive);\r\n\r\n        this.activeTab = tabId;\r\n    }\r\n\r\n    public get isPresetsActive(): boolean {\r\n        return this.activeTab === 'presets';\r\n    }\r\n\r\n    public get isYourPresetsActive(): boolean {\r\n        return this.activeTab === 'your-presets';\r\n    }\r\n\r\n    public get (): boolean {\r\n        return this.activeTab === 'load-file';\r\n    }\r\n\r\n    public navigateToPage(): void {\r\n        this.router.navigate('home');\r\n    }\r\n\r\n    public deletePreset(presetName: string): void {\r\n        // Remove the preset from local storage\r\n        localStorage.removeItem(presetName);\r\n\r\n        // Remove the preset from the presets array\r\n        this.presets = this.presets.filter(p => p.name !== presetName);\r\n    }\r\n    public handleFileUpload(event: any): void {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n            console.error(\"No file chosen\");\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (loadEvent: any) => {\r\n            try {\r\n                const parsedData = JSON.parse(loadEvent.target.result as string);\r\n                if (parsedData && parsedData.player && parsedData.player.tint === undefined) {\r\n                    parsedData.player.tint = \"#FFFFFF\";\r\n                }\r\n\r\n                if (parsedData) {\r\n                    this.settingsService.settings = parsedData; // Update the settings in the service without checking for a `settings` property since the file directly contains the settings\r\n                    this.navigateToConfigurationBuilder();  // Method to navigate to configuration builder\r\n                } else {\r\n                    console.error(\"Invalid file format\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error parsing the file\", error);\r\n            }\r\n        };\r\n\r\n        reader.readAsText(file);\r\n    }\r\n    public navigateToConfigurationBuilder(): void {\r\n        this.router.navigate('home');\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\nh1 {\r\n    text-align: center;\r\n}\r\n\r\nbody {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n    background-color: #f7f7f7;\r\n    color: #181818;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n/* Style for table rows on hover */\r\n.container table tr:hover {\r\n    background-color: #f5f5f5; /* Change this to any color you prefer */\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n\r\n.container {\r\n    text-align: center;\r\n    background-color: #ffffff;\r\n    padding: 50px;\r\n    border-radius: 10px;\r\n    box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    position: relative;\r\n    /*//width: 80%; !* This is the current width setting, which is responsive *!*/\r\n    max-width: 800px; /* This is the maximum width it can grow to */\r\n    min-width: 600px; /* This is the minimum width it can shrink to */\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\nth, td {\r\n    padding: 10px;\r\n    border-bottom: 1px solid #f1f1f1;\r\n}\r\n\r\nth {\r\n    background-color: #f7f7f7;\r\n    color: #333;\r\n}\r\n\r\n/* Tab Styles */\r\n.tabs {\r\n    display: flex;\r\n    border-bottom: 1px solid #e0e0e0; /* Optional: Adds a line under the tabs */\r\n    overflow: hidden; /* Ensures the content inside the tabs doesn't overflow */\r\n}\r\n\r\n.tab-button {\r\n    flex: 1; /* Makes each tab button take equal width */\r\n    padding: 10px 20px;\r\n    margin: 0;\r\n    cursor: pointer;\r\n    background-color: #f7f7f7;\r\n    border: none;\r\n    transition: background-color 0.3s ease;\r\n    border-bottom: 2px solid transparent; /* Optional: Adds a bottom border to indicate active tab */\r\n}\r\n\r\n.tab-button:hover {\r\n    background-color: #e0e0e0;\r\n}\r\n\r\n.tab-button.active {\r\n    background-color: #007BFF;\r\n    color: #ffffff;\r\n    border-bottom: 2px solid #0056b3; /* Optional: Changes the bottom border color for active tab */\r\n}\r\n\r\n/* This style will target the <tr> elements within your table */\r\ntable tr:hover th {\r\n    background-color: #e0e0e0;\r\n    cursor: pointer;\r\n}\r\n\r\n\r\n.delete-btn {\r\n    background-color: grey;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 50%; /* Makes the button circular */\r\n    width: 20px;\r\n    height: 20px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n}\r\n\r\n.delete-btn:hover {\r\n    background-color: darkgrey;\r\n}\r\n","<template>\r\n    <require from=\"resources/value-converters/json-value-converter\"></require>\r\n    <require from=\"resources/value-converters/integer-value-converter\"></require>\r\n    <require from=\"resources/value-converters/number-value-converter\"></require>\r\n    <require from=\"resources/value-converters/integer-array-value-converter\"></require>\r\n    <require from=\"resources/value-converters/flag-value-converter\"></require>\r\n    <require from=\"./PresetPage.css\"></require>\r\n    <require from=\"../LandingPage/LandingPage.css\"></require>\r\n\r\n\r\n        <div class=\"landing-page\">\r\n            <div>\r\n                <img src=\"../../../assets/player.png\" alt=\"Cyberball Sprite\" class=\"welcome-image\">\r\n                <h1>Cyberball Presets</h1>\r\n                <div class=\"tabs\">\r\n\r\n                    <button class=\"tab-button ${isPresetsActive ? 'active' : ''}\" click.delegate=\"showTab('presets')\">Presets</button>\r\n                    <button class=\"tab-button ${isYourPresetsActive ? 'active' : ''}\" click.delegate=\"showTab('your-presets')\">Your Games</button>\r\n                    <button class=\"tab-button ${isLoadFromFile ? 'active' : ''}\" click.delegate=\"showTab('load-file')\">Load File</button>\r\n                </div>\r\n                <div class=\"container\" id=\"presets\" css.bind=\"isPresetsActive ? 'display: block;' : 'display: none;'\">\r\n                <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Gif</th>\r\n                        </tr>\r\n                        <tr click.trigger=\"navigateToPage()\">\r\n\r\n                            <th> Ostracized Game</th>\r\n                            <th> player will never get the ball</th>\r\n                            <th>\r\n                                <video width=\"320\" height=\"240\" loop autoplay muted>\r\n                                    <source src=\"../../../assets/ostracizedMp4.mp4\" type=\"video/mp4\">\r\n                                    Your browser does not support the video tag.\r\n                                </video>\r\n                            </th>\r\n\r\n                        </tr>\r\n\r\n                    </table>\r\n                </div>\r\n                <div class=\"container\" id=\"your-presets\" css.bind=\"isYourPresetsActive ? 'display: block;' : 'display: none;'\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th></th>\r\n                        </tr>\r\n\r\n                        <tr repeat.for=\"preset of presets\" click.trigger=\"loadPresetAndNavigate(preset.name)\">\r\n                            <td>${preset.name}</td>\r\n                            <td>${preset.description}</td>\r\n                            <td>\r\n                                <button class=\"delete-btn\" click.trigger=\"deletePreset(preset.name)\">X</button>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"container\" id=\"load-file\" css.bind=\"isLoadFromFile ? 'display: block;' : 'display: none;'\">\r\n                    <div>\r\n                        <input type=\"file\" id=\"fileUpload\" change.delegate=\"handleFileUpload($event)\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</template>\r\n\r\n\r\n\r\n","\r\n\r\nexport class SettingsService {\r\n    settings: any;\r\n}\r\n","import {BindingSignaler} from 'aurelia-templating-resources';\r\nimport {autoinject} from 'aurelia-framework';\r\n\r\n@autoinject()\r\nexport class MessageTestViewModel {\r\n    messages: Array<any> = [];\r\n\r\n    constructor(private signaler: BindingSignaler) {}\r\n\r\n    bind() {\r\n        window.addEventListener('message', (e) => {\r\n            console.log('message', e.data);\r\n            this.messages.push(e.data);\r\n\r\n            this.signaler.signal('message');\r\n        });\r\n    }\r\n}\r\n","<template>\r\n    <require from=\"resources/value-converters/json-value-converter\"></require>\r\n\r\n    <iframe src=\"/#game\" width=\"800\" height=\"600\"></iframe>\r\n    <div style=\"border: 1px solid black; width: 800px; height: 200px; overflow-y: auto;\">\r\n        <div repeat.for=\"message of messages\">${message | json & signal: 'message'}</div>\r\n    </div>\r\n</template>\r\n","import { FrameworkConfiguration, PLATFORM } from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n    config.globalResources(PLATFORM.moduleName('./phaser-game/phaser-game'));\r\n}\r\n","import { customElement, bindable, autoinject, inlineView } from \"aurelia-framework\";\r\nimport Phaser from 'phaser';\r\n\r\n@customElement('phaser-game')\r\n@autoinject()\r\n@inlineView('<template></template>')\r\nexport class PhaserGameCustomElement {\r\n    @bindable config: Phaser.Types.Core.GameConfig;\r\n    @bindable game: Phaser.Game;\r\n\r\n    constructor(protected element: Element) {\r\n\r\n    }\r\n\r\n    bind() {\r\n        this.config.parent = this.element as HTMLElement;\r\n        this.game = new Phaser.Game(this.config);\r\n    }\r\n}\r\n","export class FlagValueConverter {\r\n    fromView(value, source, flag) {\r\n        return value ? source | flag : source & ~flag;\r\n    }\r\n\r\n    toView(_value, source, flag) {\r\n        return (source & flag) === flag;\r\n    }\r\n}\r\n","export class IntegerArrayValueConverter {\r\n    fromView(value: string) {\r\n        // Remove anything but numbers and commas.\r\n        value = value.replace(/[^0-9,]/g, '');\r\n\r\n        // Remove any trailing comma.\r\n        if(value[value.length - 1] == ',')\r\n            value = value.substr(0, value.length - 1);\r\n\r\n        return JSON.parse(`[${value}]`);\r\n    }\r\n\r\n    toView(value: Array<number>) {\r\n        return JSON.stringify(value).substr(1, value.length * 2 - 1);\r\n    }\r\n}\r\n","export class IntegerValueConverter {\r\n    fromView(value) {\r\n        return parseInt(value ?? '0');\r\n    }\r\n}\r\n","export class JsonValueConverter {\r\n    toView(value) {\r\n        return JSON.stringify(value, null, 2);\r\n    }\r\n}\r\n","export class NumberValueConverter {\r\n    fromView(value) {\r\n        return parseFloat(value ?? '0');\r\n    }\r\n}\r\n","import { Player } from './../models/player-model';\r\nimport { LeaveTrigger } from 'enums/leave-trigger';\r\nimport { SettingsModel } from './../models/settings-model';\r\nimport Phaser from 'phaser';\r\nimport { CpuSettingsModel } from 'models/cpu-settings-model';\r\n\r\nconst textStyle = { fontFamily: 'Arial', color: '#000000' };\r\n\r\n\r\nexport class CyberballScene extends Phaser.Scene {\r\n    public settings: SettingsModel;\r\n\r\n    // Game Objects:\r\n    private player: Player;\r\n\r\n    private ballSprite: Phaser.GameObjects.Sprite;\r\n    private playerSprite: Phaser.GameObjects.Sprite;\r\n    private playerGroup: Phaser.Physics.Arcade.Group;\r\n    private cpuSprites: Phaser.GameObjects.Sprite[] = [];\r\n    private timeLimitText: Phaser.GameObjects.Text;\r\n\r\n\r\n    // Gameplay Mechanics:\r\n\r\n    private playerHasBall = true;\r\n    private ballHeld = true;\r\n    private throwTarget: Phaser.GameObjects.Sprite;\r\n\r\n    private activeTimeout;\r\n\r\n    private absentPlayers: number[] = [];\r\n    private showPlayerLeave: boolean = false;\r\n\r\n    private gameEnded = false;\r\n\r\n    // Stats:\r\n\r\n    private throwCount = 0;\r\n\r\n    private lastTime: number;\r\n    private startTime: number;\r\n\r\n    constructor(settings: SettingsModel) {\r\n        super({});\r\n\r\n        this.settings = settings;\r\n\r\n        if(this.settings.useSchedule){\r\n\r\n            this.settings.schedule = this.convertToMap(this.settings.scheduleText);\r\n\r\n            //here for each value in this.settings.schedule run addRandomizationToScheduleText\r\n            //and update this.settings.\r\n            this.settings.schedule.forEach((value, key) => {\r\n                this.settings.schedule.set(key, this.addRandomizationToScheduleNumbers(value));\r\n            });\r\n            console.log(this.settings.schedule)\r\n        }\r\n    }\r\n\r\n    private addRandomizationToScheduleNumbers(input: number[]): number[] {\r\n        // This array will hold the final sequence of numbers\r\n        let newSchedule: number[] = [];\r\n\r\n        // Iterate over each element in the input array\r\n        input.forEach(number => {\r\n            if (number > 9) {\r\n                // Convert the number to a string to get individual digits\r\n                let digits = number.toString().split('');\r\n                // Shuffle the digits randomly\r\n                for (let i = digits.length - 1; i > 0; i--) {\r\n                    const j = Math.floor(Math.random() * (i + 1));\r\n                    [digits[i], digits[j]] = [digits[j], digits[i]]; // ES6 array destructuring swap\r\n                }\r\n                // Convert each digit back to a number and add to the new schedule\r\n                digits.forEach(digit => newSchedule.push(parseInt(digit)));\r\n            } else {\r\n                // If the number is a single digit, just add it to the new schedule\r\n                newSchedule.push(number);\r\n            }\r\n        });\r\n        //number of schdules != number of cpus && number in each exists as a cpu index\r\n        //throw delay\r\n        //errrrors messages\r\n        //timing\r\n\r\n\r\n        // Return the new array of numbers\r\n        return newSchedule;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private convertToMap(str: string): Map<number, number[]> {\r\n        const lines = str.split('\\n');\r\n        const map = new Map<number, number[]>();\r\n\r\n        for (const line of lines) {\r\n          const [key, ...values] = line.split(',').map(Number);\r\n          map.set(key, values);\r\n        }\r\n\r\n        return map;\r\n      }\r\n\r\n    public preload() {\r\n        this.load.crossOrigin = 'anonymous';\r\n\r\n        // TODO: Load from settings.\r\n        this.load.image('ball', `${this.settings.baseUrl}/${this.settings.ballSprite}`);\r\n        this.load.multiatlas('player', `${this.settings.baseUrl}/player.json`, 'assets');\r\n\r\n        if(this.settings.player.portraitBuff){\r\n            let data = new Image();\r\n\r\n            // data.src = this.settings.player.portraitBuff as string;\r\n\r\n            this.textures.addBase64('playerPortrait', this.settings.player.portraitBuff);\r\n            // this.load.image('playerPortrait', 'https://cors-anywhere.herokuapp.com/' + this.settings.player.portrait);\r\n\r\n        }\r\n\r\n        this.settings.computerPlayers.forEach((cpu, i) => {\r\n            if(cpu.portraitBuff){\r\n                this.textures.addBase64('cpuPortrait' + i, cpu.portraitBuff);\r\n            }\r\n                // this.load.image('cpuPortrait' + i, 'https://cors-anywhere.herokuapp.com/' + cpu.portrait);\r\n        });\r\n    }\r\n\r\n    public create() {\r\n        this.cameras.main.setBackgroundColor('#ffffff');\r\n\r\n        // Animations:\r\n\r\n        this.anims.create({\r\n            key: 'active',\r\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'active/', suffix: '.png' })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'idle',\r\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'idle/', suffix: '.png' })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'throw',\r\n            frameRate: 12,\r\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 3, prefix: 'throw/', suffix: '.png' })\r\n        });\r\n\r\n        this.anims.create({\r\n            key: 'catch',\r\n            frames: this.anims.generateFrameNames('player', { start: 1, end: 1, prefix: 'catch/', suffix: '.png' })\r\n        });\r\n\r\n        // Player:\r\n\r\n        let playerPosition = this.getPlayerPosition();\r\n\r\n        this.playerGroup = this.physics.add.group({ immovable: true, allowGravity: false });\r\n        this.playerSprite = this.playerGroup.create(playerPosition.x, playerPosition.y, 'player', 'active/1.png');\r\n        this.playerSprite.setData('settings', this.settings.player);\r\n\r\n        if(this.settings.player.tint)\r\n            this.playerSprite.setTint(parseInt(this.settings.player.tint.substr(1), 16));\r\n\r\n        this.playerSprite.setData('name-object', this.add.text(playerPosition.x, playerPosition.y + this.playerSprite.height / 2 + 10, this.settings.player.name, textStyle).setOrigin(0.5));\r\n\r\n        if(this.settings.player.portrait) {\r\n            var portraitPosition = this.getPlayerPortraitPosition(this.playerSprite);\r\n            var image = this.add.image(portraitPosition.x, portraitPosition.y, 'playerPortrait');\r\n\r\n            image.setScale(this.settings.portraitHeight / image.height);\r\n        }\r\n\r\n        if((this.settings.player.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time) {\r\n            this.playerSprite.setData('leaveTime', Date.now() + this.getVariantValue(this.settings.player.leaveTime, this.settings.player.leaveTimeVariance) * 1000);\r\n        }\r\n\r\n        if((this.settings.player.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\r\n            this.playerSprite.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(this.settings.player.leaveTimeIgnored, this.settings.player.leaveTimeIgnoredVariance) * 1000);\r\n        }\r\n\r\n\r\n\r\n        // CPU:\r\n\r\n        for (let i = 0; i < this.settings.computerPlayers.length; i++) {\r\n            let cpuPosition = this.getCPUPosition(i);\r\n            let cpuSprite: Phaser.GameObjects.Sprite = this.playerGroup.create(cpuPosition.x, cpuPosition.y, 'player', 'idle/1.png');\r\n\r\n\r\n\r\n            cpuSprite.setData('name-object', this.add.text(cpuPosition.x, cpuPosition.y + cpuSprite.height / 2 + 10, this.settings.computerPlayers[i].name, textStyle).setOrigin(0.5));\r\n\r\n            if(this.settings.computerPlayers[i].portrait) {\r\n                var portraitPosition = this.getCPUPortraitPosition(i, cpuSprite);\r\n                var image = this.add.image(portraitPosition.x, portraitPosition.y, 'cpuPortrait' + i);\r\n\r\n                image.setScale(this.settings.portraitHeight / image.height);\r\n            }\r\n\r\n            cpuSprite.flipX = cpuPosition.x > this.playerSprite.x;\r\n            cpuSprite.setData('settings', this.settings.computerPlayers[i]);\r\n\r\n            if(this.settings.computerPlayers[i].tint)\r\n                cpuSprite.setTint(parseInt(this.settings.computerPlayers[i].tint.substr(1), 16));\r\n\r\n            cpuSprite.setInteractive();\r\n            cpuSprite.on('pointerdown', (e) => {\r\n                if (this.playerHasBall) {\r\n\r\n\r\n                    // Ensure player and ball are facing the correct way on touch devices:\r\n                    this.playerSprite.flipX = this.input.x < this.playerSprite.x;\r\n\r\n                    let ballPosition = this.getActiveBallPosition(this.playerSprite);\r\n                    this.ballSprite.x = ballPosition.x;\r\n                    this.ballSprite.y = ballPosition.y;\r\n\r\n                    this.throwBall(this.playerSprite, cpuSprite);\r\n                }\r\n            });\r\n\r\n            if((this.settings.computerPlayers[i].leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time) {\r\n                cpuSprite.setData('leaveTime', Date.now() + this.getVariantValue(this.settings.computerPlayers[i].leaveTime, this.settings.computerPlayers[i].leaveTimeVariance) * 1000);\r\n            }\r\n\r\n            if((this.settings.computerPlayers[i].leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\r\n                cpuSprite.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(this.settings.computerPlayers[i].leaveTimeIgnored, this.settings.computerPlayers[i].leaveTimeIgnoredVariance) * 1000);\r\n            }\r\n\r\n            this.cpuSprites.push(cpuSprite);\r\n        }\r\n        if (this.settings.useSchedule ) {\r\n\r\n            if(this.settings.changeColor){\r\n                this.cpuSprites.forEach(cpu => {\r\n                    cpu.tint = 0xff0000;\r\n                });\r\n                this.playerSprite.tint = 0xff0000;\r\n                if (this.playerHasBall) {\r\n                    this.playerSprite.tint = 0x00ff00;\r\n                }\r\n                const playerId = 1;\r\n                let scheduleQueue  = this.settings.schedule.get(playerId);\r\n\r\n                let nextRand = 0;\r\n                if(scheduleQueue && scheduleQueue.length > 0){\r\n                    nextRand = scheduleQueue[0];\r\n                }else{\r\n                    //throw an error\r\n                }\r\n\r\n                let joinedPlayers = playerId + String(nextRand);\r\n\r\n                const digits = Array.from(String(joinedPlayers), Number);\r\n\r\n                digits.forEach(id => {\r\n                    let sprite = this.playerGroup.getChildren()[id-1] as Phaser.GameObjects.Sprite;\r\n                    sprite.tint = 0x00ff00;\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        // Ball:\r\n\r\n        let ballPosition = this.getActiveBallPosition(this.playerSprite);\r\n        this.ballSprite = this.physics.add.sprite(ballPosition.x, ballPosition.y, 'ball');\r\n\r\n        if(this.settings.ballTint)\r\n            this.ballSprite.setTint(parseInt(this.settings.ballTint.substr(1), 16));\r\n\r\n        this.physics.add.overlap(this.ballSprite, this.playerGroup, (_b, receiver) => {\r\n            if (!this.ballHeld && receiver === this.throwTarget)\r\n                this.catchBall(receiver as Phaser.GameObjects.Sprite);\r\n        });\r\n\r\n        // Time Limit:\r\n\r\n        this.startTime = Date.now();\r\n        this.lastTime = this.startTime;\r\n\r\n        if (this.settings.timeLimit > 0 && this.settings.displayTimeLimit) {\r\n            this.timeLimitText = this.add.text(this.sys.canvas.width - 10, 10, this.getTimeString(), textStyle);\r\n            this.timeLimitText.setOrigin(1, 0);\r\n        }\r\n\r\n    }\r\n\r\n    public update() {\r\n        if(this.gameEnded)\r\n            return;\r\n\r\n        if (this.playerHasBall) {\r\n            this.playerSprite.play('active');\r\n            this.playerSprite.flipX = this.input.x < this.playerSprite.x;\r\n\r\n            let ballPosition = this.getActiveBallPosition(this.playerSprite);\r\n            this.ballSprite.x = ballPosition.x;\r\n            this.ballSprite.y = ballPosition.y;\r\n        } else if (!this.ballHeld) {\r\n            // Eyes on the ball:\r\n            this.playerGroup.getChildren().forEach(c => {\r\n                let sprite = c as Phaser.GameObjects.Sprite;\r\n                if (sprite.frame.name.includes('idle'))\r\n                    sprite.flipX = this.ballSprite.x < sprite.x\r\n            });\r\n        }\r\n\r\n        // Player may leave after time has passed:\r\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time &&\r\n                Date.now() > this.playerSprite.getData('leaveTime')) {\r\n            this.showPlayerLeave = true;\r\n            this.postEvent('player-may-leave', {\r\n                reason: 'time elapsed'\r\n            });\r\n        }\r\n        // Player may leave after ignored for a time:\r\n        else if (!this.playerHasBall && !this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored &&\r\n                    Date.now() > this.playerSprite.getData('leaveTimeIgnored')) {\r\n            this.showPlayerLeave = true;\r\n            this.postEvent('player-may-leave', {\r\n                reason: 'time ignored'\r\n            });\r\n        }\r\n\r\n        this.cpuSprites.forEach(cpu => {\r\n            // CPU shouldn't leave if they:\r\n            //  - have the ball or are about to catch the ball\r\n            //  - have already left\r\n            if (cpu == this.throwTarget || cpu.getData('absent'))\r\n                return;\r\n\r\n            let settings = cpu.getData('settings') as CpuSettingsModel;\r\n\r\n            // CPU may leave after some time\r\n            if((settings.leaveTrigger & LeaveTrigger.Time) === LeaveTrigger.Time &&\r\n                    Date.now() > cpu.getData('leaveTime')) {\r\n                this.leaveGame(cpu, 'time elapsed');\r\n            }\r\n            // CPU may leave after ignored for a time:\r\n            else if ((settings.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored &&\r\n                    Date.now() > cpu.getData('leaveTimeIgnored')) {\r\n                this.leaveGame(cpu, 'time ignored');\r\n            }\r\n        });\r\n\r\n        // Time Limit:\r\n\r\n        if (this.settings.timeLimit > 0 && this.settings.displayTimeLimit)\r\n            this.timeLimitText.setText(this.getTimeString());\r\n\r\n        if (this.settings.timeLimit > 0 && Date.now() - this.startTime > this.settings.timeLimit) {\r\n            this.postEvent('global-time-limit');\r\n            this.gameOver();\r\n        }\r\n    }\r\n\r\n    public gameOver() {\r\n        if (this.gameEnded)\r\n            return;\r\n\r\n        this.gameEnded = true;\r\n\r\n        this.postEvent('game-end');\r\n\r\n        // Stop future throws:\r\n        clearTimeout(this.activeTimeout);\r\n        // @ts-ignore\r\n        this.playerGroup.children.each(child => child.removeAllListeners());\r\n\r\n        // Draw game over screen:\r\n        this.add.rectangle(this.sys.canvas.width / 2, this.sys.canvas.height / 2, this.sys.canvas.width, this.sys.canvas.height, 0xdddddd, this.settings.gameOverOpacity);\r\n        this.add.text(this.sys.canvas.width / 2, this.sys.canvas.height / 2, this.settings.gameOverText, textStyle).setOrigin(0.5);\r\n    }\r\n\r\n    // Mechanics:\r\n\r\n    public throwBall(thrower: Phaser.GameObjects.Sprite, receiver: Phaser.GameObjects.Sprite) {\r\n        this.postEvent('throw', {\r\n            thrower: thrower.getData('settings').name,\r\n            receiver: receiver.getData('settings').name,\r\n            wait: Date.now() - this.lastTime\r\n        });\r\n\r\n        this.lastTime = Date.now();\r\n\r\n        // Update trackers:\r\n\r\n        // Wait until the player throws the ball to reset their ignored timer, so they cannot ignore themselves.\r\n        let throwerSettings = thrower.getData('settings');\r\n        if((throwerSettings.leaveTrigger & LeaveTrigger.TimeIgnored) === LeaveTrigger.TimeIgnored) {\r\n            receiver.setData('leaveTimeIgnored', Date.now() + this.getVariantValue(throwerSettings.leaveTimeIgnored, throwerSettings.leaveTimeIgnoredVariance) * 1000);\r\n        }\r\n\r\n        this.playerHasBall = this.ballHeld = false;\r\n        this.throwTarget = receiver;\r\n\r\n        this.throwCount++;\r\n\r\n        // Player animation:\r\n\r\n        thrower.play('throw');\r\n        thrower.playAfterRepeat('idle');\r\n\r\n        // Ball physics:\r\n\r\n        let ballTargetPosition = this.getCaughtBallPosition(receiver);\r\n        this.physics.moveTo(this.ballSprite, ballTargetPosition.x, ballTargetPosition.y, this.settings.ballSpeed);\r\n    }\r\n\r\n    private getRandomDigit(number: number): number {\r\n        const digits = Array.from(String(number), Number);\r\n\r\n        const randomIndex = Math.floor(Math.random() * digits.length);\r\n\r\n        return digits[randomIndex] - 1;\r\n      }\r\n\r\n    public catchBall(receiver: Phaser.GameObjects.Sprite) {\r\n\r\n\r\n        // Update trackers:\r\n\r\n        this.ballHeld = true;\r\n        receiver.setData('throwsIgnored', 0)\r\n\r\n        // Player animation:\r\n\r\n        receiver.play('catch');\r\n\r\n        // Ball physics:\r\n\r\n        let ballPosition = this.getCaughtBallPosition(receiver);\r\n        (this.ballSprite.body as Phaser.Physics.Arcade.Body).reset(ballPosition.x, ballPosition.y);\r\n\r\n        // Check for leavers:\r\n\r\n        // Player may leave after a number of turns:\r\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Turn) === LeaveTrigger.Turn) {\r\n            let leaveThrows = this.getVariantValue(this.settings.player.leaveTurn, this.settings.player.leaveTurnVariance);\r\n\r\n            if (this.throwCount >= leaveThrows) {\r\n                this.showPlayerLeave = true;\r\n                this.postEvent('player-may-leave', {\r\n                    reason: 'throws elapsed'\r\n                });\r\n            }\r\n        }\r\n        // Player may leave after ignored for a number of turns:\r\n        else if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.Ignored) === LeaveTrigger.Ignored) {\r\n            let leaveThrows = this.getVariantValue(this.settings.player.leaveIgnored, this.settings.player.leaveIgnoredVariance);\r\n            let playerThrowsIgnored = this.playerSprite.getData('throwsIgnored') ?? 0;\r\n\r\n            if(this.playerSprite != receiver)\r\n                this.playerSprite.setData('throwsIgnored', ++playerThrowsIgnored);\r\n\r\n            if (playerThrowsIgnored >= leaveThrows) {\r\n                this.showPlayerLeave = true;\r\n                this.postEvent('player-may-leave', {\r\n                    reason: 'throws ignored'\r\n                });\r\n            }\r\n        }\r\n\r\n        this.cpuSprites.forEach(cpu => {\r\n            // CPU shouldn't leave if they:\r\n            //  - have the ball\r\n            //  - have already left\r\n            if (cpu == receiver || cpu.getData('absent'))\r\n                return;\r\n\r\n            let settings = cpu.getData('settings') as CpuSettingsModel;\r\n            let throwsIgnored = (cpu.getData('throwsIgnored') ?? 0) + 1;\r\n            cpu.setData('throwsIgnored', throwsIgnored);\r\n\r\n            // CPU may leave after a number of turns:\r\n            if((settings.leaveTrigger & LeaveTrigger.Turn) === LeaveTrigger.Turn) {\r\n                let leaveThrows = this.getVariantValue(settings.leaveTurn, settings.leaveTurnVariance);\r\n\r\n                if (this.throwCount >= leaveThrows && this.checkChance(settings.leaveTurnChance))\r\n                    this.leaveGame(cpu, 'throws elapsed');\r\n            }\r\n            // CPU may leave after ignored for a number of turns:\r\n            else if((settings.leaveTrigger & LeaveTrigger.Ignored) === LeaveTrigger.Ignored) {\r\n                let leaveThrows = this.getVariantValue(settings.leaveIgnored, settings.leaveIgnoredVariance);\r\n\r\n                if (throwsIgnored >= leaveThrows && this.checkChance(settings.leaveIgnoredChance))\r\n                    this.leaveGame(cpu, 'throws ignored');\r\n            }\r\n        });\r\n\r\n        // The game ends at the end of the schedule or when reaching the throw count.\r\n\r\n        if (\r\n\r\n            (this.settings.useSchedule && this.settings.scheduleHonorsThrowCount && this.throwCount >= this.settings.throwCount) ||\r\n            (!this.settings.useSchedule && this.throwCount >= this.settings.throwCount)\r\n        ) {\r\n            this.postEvent('throw-count-met');\r\n            this.gameOver();\r\n            return;\r\n        }\r\n\r\n        // Prepare for next throw:\r\n\r\n        if (receiver === this.playerSprite) {\r\n            this.playerHasBall = true;\r\n        } else {\r\n            let settings = receiver.getData('settings') as CpuSettingsModel;\r\n\r\n            this.activeTimeout = setTimeout(() => {\r\n                receiver.play('active');\r\n\r\n                ballPosition = this.getActiveBallPosition(receiver);\r\n                this.ballSprite.x = ballPosition.x;\r\n                this.ballSprite.y = ballPosition.y;\r\n                let id = this.playerGroup.getChildren().indexOf(receiver);\r\n\r\n                this.activeTimeout = setTimeout(() => {\r\n\r\n                    if (this.settings.useSchedule ) {\r\n                        let scheduleQueue  = this.settings.schedule.get(id + 1);\r\n\r\n                        let nextRand = 0;\r\n                        if(scheduleQueue && scheduleQueue.length > 0){\r\n                            nextRand = scheduleQueue[0];\r\n                        }else{\r\n                            this.postEvent('throw-count-met');\r\n                            this.gameOver();\r\n                            return;\r\n                            // const scheduleMap = this.convertToMap(this.settings.scheduleText);\r\n                            // this.settings.schedule.set(id, scheduleMap.get(id));\r\n                        }\r\n\r\n                        if(this.settings.changeColor){\r\n                            this.cpuSprites.forEach(cpu => {\r\n                                cpu.tint = 0xff0000;\r\n                            });\r\n                            this.playerSprite.tint = 0xff0000;\r\n\r\n                            let joinedPlayers = id + String(nextRand);\r\n\r\n                            const digits = Array.from(String(joinedPlayers), Number);\r\n                            console.log('joinedPlayers', digits);\r\n                            digits.forEach(id => {\r\n                                let sprite = this.playerGroup.getChildren()[id-1] as Phaser.GameObjects.Sprite;\r\n                                sprite.tint = 0x00ff00;\r\n                            });\r\n                        }\r\n\r\n                        let next = this.getRandomDigit(nextRand);\r\n                        if(next == 0){\r\n                            console.log(\"next is the player....\")\r\n                        }\r\n\r\n                        // Skip self and absent players in schedule.\r\n                        while(next === this.playerGroup.getChildren().indexOf(receiver) &&\r\n                            !this.absentPlayers.includes(next)){\r\n                            //this.scheduleIndex++;\r\n                            if(scheduleQueue.length > 0){\r\n                                const tmpRand = scheduleQueue.shift();\r\n                                if(tmpRand){\r\n                                    next = this.getRandomDigit(tmpRand);\r\n                                }else{\r\n                                    next = 0;\r\n                                    break;\r\n                                }\r\n                            }else{\r\n                                next = 0;\r\n                                break;\r\n                            }\r\n\r\n                        }\r\n\r\n                        this.throwBall(receiver, this.playerGroup.getChildren()[next] as Phaser.GameObjects.Sprite)\r\n\r\n\r\n                        // show current player\r\n                        // this.currentIndex = next;\r\n                        // if(this.currentIndex ===0){\r\n                        //     this.currentIndexText.setText(`current player: You`);\r\n                        // }\r\n                        // else{\r\n                        //     this.currentIndexText.setText(`current player: ${this.settings.computerPlayers[this.currentIndex-1].name}`);\r\n                        //     //seperate because dont know next one is player or cpu\r\n                        // }\r\n                        scheduleQueue.shift();\r\n                        // if(scheduleQueue == undefined || scheduleQueue.length == 0){\r\n                        //     const scheduleMap = this.convertToMap(this.settings.scheduleText);\r\n\r\n                        //     this.settings.schedule.set(id,scheduleMap.get(id));\r\n\r\n                        // }else{\r\n                        //     this.settings.schedule.set(id,scheduleQueue);\r\n                        // }\r\n\r\n                        // if(scheduleQueue.length > 0){\r\n                        //     this.scheduleIndex = this.getRandomDigit(scheduleQueue[0]);\r\n                        // }else{\r\n                        //     this.scheduleIndex = 0;\r\n\r\n                        // }\r\n\r\n                        // // show next player\r\n                        // if(this.scheduleIndex===0){\r\n                        //     this.scheduleIndexText.setText(`next player: You`);\r\n                        // }\r\n                        // else{\r\n                        //     this.scheduleIndexText.setText(`next player: ${this.settings.computerPlayers[this.scheduleIndex-1].name}`);\r\n                        // }\r\n\r\n\r\n\r\n                    } else {\r\n                        let random = Math.random() * 100;\r\n\r\n                        // A psuedo-random target is selected by subtracting the target preference chance from the random number until 0 is reached\r\n                        for (var i = 0; i < settings.targetPreference.length; i++) {\r\n                            random -= settings.targetPreference[i];\r\n\r\n                            if (random <= 0) {\r\n                                // Exclude self\r\n                                if (i >= this.playerGroup.getChildren().indexOf(receiver))\r\n                                    i++\r\n\r\n                                this.throwBall(receiver, this.playerGroup.getChildren()[i] as Phaser.GameObjects.Sprite);\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }, this.getVariantValue(settings.throwDelay, settings.throwDelayVariance));\r\n            }, this.getVariantValue(settings.catchDelay, settings.catchDelayVariance))\r\n        }\r\n    }\r\n\r\n    public leaveGame(player: Phaser.GameObjects.Sprite, reason: string = '') {\r\n        let nameObject = player.getData('name-object') as Phaser.GameObjects.Text;\r\n        let playerIndex = this.playerGroup.getChildren().indexOf(player);\r\n\r\n        this.absentPlayers.push(playerIndex);\r\n        player.setData('absent', true);\r\n\r\n        nameObject.setText([nameObject.text, 'has left the game.']);\r\n\r\n        // Deactivate player object\r\n\r\n        player.removeAllListeners();\r\n        player.setVisible(false);\r\n\r\n        this.postEvent('leave', {\r\n            leaver: player.getData('settings').name,\r\n            reason: reason\r\n        });\r\n\r\n        // Redistribute throw target weights:\r\n\r\n        console.log('pindex', playerIndex);\r\n\r\n        this.settings.computerPlayers.forEach((cpu, i) => {\r\n            if(this.absentPlayers.includes(i + 1))\r\n                return;\r\n\r\n            console.log('distribute before', i, cpu.targetPreference);\r\n\r\n            let targetIndex = playerIndex > (i + 1) ? playerIndex - 1 : playerIndex;\r\n            let targetWeight = cpu.targetPreference[targetIndex];\r\n            cpu.targetPreference[targetIndex] = 0;\r\n            let total = cpu.targetPreference.reduce((acc, cur) => acc + cur);\r\n\r\n            for(let k = 0; k < cpu.targetPreference.length; k++) {\r\n                if (cpu.targetPreference[k] == 0)\r\n                    continue;\r\n\r\n                cpu.targetPreference[k] += cpu.targetPreference[k] / total * targetWeight;\r\n            }\r\n\r\n            console.log('distribute after', i, cpu.targetPreference);\r\n        });\r\n\r\n        // If there is only one player left, end the game:\r\n        if (this.absentPlayers.length >= this.settings.computerPlayers.length) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n\r\n        // Check if this triggers other players leaving:\r\n\r\n        if(!this.showPlayerLeave && (this.settings.player.leaveTrigger & LeaveTrigger.OtherLeaver) === LeaveTrigger.OtherLeaver) {\r\n            console.log(this.absentPlayers.length, this.settings.player.leaveOtherLeaver);\r\n            if (this.absentPlayers.length >= this.settings.player.leaveOtherLeaver) {\r\n                this.showPlayerLeave = true;\r\n                this.postEvent('player-may-leave', {\r\n                    reason: 'other leavers'\r\n                });\r\n            }\r\n        }\r\n\r\n        this.cpuSprites.forEach(cpu => {\r\n            let settings = cpu.getData('settings') as CpuSettingsModel;\r\n\r\n            // CPU shouldn't leave if they:\r\n            //  - have the ball\r\n            //  - have already left\r\n            if (cpu == this.throwTarget || cpu.getData('absent'))\r\n                return;\r\n\r\n            if((settings.leaveTrigger & LeaveTrigger.OtherLeaver) === LeaveTrigger.OtherLeaver) {\r\n                if (this.absentPlayers.length >= settings.leaveOtherLeaver && this.checkChance(settings.leaveOtherLeaverChance))\r\n                    this.leaveGame(cpu, 'other leavers');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Helpers:\r\n\r\n    getCPUPosition(i: number): Phaser.Geom.Point {\r\n        // TODO: Increase padding when portaits are enabled.\r\n        let padding = 75;\r\n        let extraPadding = this.settings.hasPortraits ? this.settings.portraitHeight + this.settings.portraitPadding * 2 : 0;\r\n\r\n        if(this.settings.computerPlayers.length === 1) {\r\n            return new Phaser.Geom.Point(\r\n                this.sys.canvas.width / 2,\r\n                padding + extraPadding\r\n            );\r\n        }\r\n\r\n        return new Phaser.Geom.Point(\r\n            // Evenly divide the width of the screen by the number of players.\r\n            ((this.sys.canvas.width - (padding * 2)) / (this.settings.computerPlayers.length - 1)) * i + padding,\r\n            // First and last player are closer in the middle, others stand along the edge.\r\n            i === 0 || i === this.settings.computerPlayers.length - 1\r\n                ? (this.sys.canvas.height / 2)\r\n                : padding + extraPadding\r\n        );\r\n    }\r\n\r\n    getCPUPortraitPosition(i: number, sprite: Phaser.GameObjects.Sprite): Phaser.Geom.Point  {\r\n        let position = this.getCPUPosition(i);\r\n\r\n        return new Phaser.Geom.Point(\r\n            position.x,\r\n            position.y - this.settings.portraitHeight + this.settings.portraitPadding * 2 - sprite.height / 2\r\n        );\r\n    }\r\n\r\n    getPlayerPosition(): Phaser.Geom.Point {\r\n        let padding = 75;\r\n\r\n        if(this.settings.hasPortraits)\r\n            padding += this.settings.portraitHeight + this.settings.portraitPadding * 2;\r\n\r\n        return new Phaser.Geom.Point(\r\n            this.sys.canvas.width / 2,\r\n            this.sys.canvas.height - padding\r\n        );\r\n    }\r\n\r\n    getPlayerPortraitPosition(sprite: Phaser.GameObjects.Sprite): Phaser.Geom.Point {\r\n        var position = this.getPlayerPosition();\r\n\r\n        return new Phaser.Geom.Point(\r\n            position.x,\r\n            position.y + this.settings.portraitHeight / 2 + this.settings.portraitPadding * 2 + sprite.height / 2 + 10\r\n        );\r\n    }\r\n\r\n    // TODO: This is invalid if the sprites are changed.\r\n    getCaughtBallPosition(target: Phaser.GameObjects.Sprite) {\r\n        return new Phaser.Geom.Point(target.x + (target.flipX ? -50 : 50), target.y - 15);\r\n    }\r\n\r\n    // TODO: This is invalid if the sprites are changed.\r\n    getActiveBallPosition(target: Phaser.GameObjects.Sprite) {\r\n        return new Phaser.Geom.Point(target.x + (target.flipX ? 40 : -40), target.y - 20);\r\n    }\r\n\r\n    getVariantValue(base: number, variance: number): number {\r\n        return base + (Phaser.Math.RND.between(0, variance) * Phaser.Math.RND.sign());\r\n    }\r\n\r\n    checkChance(chance: number): boolean {\r\n        return Phaser.Math.RND.between(0, 100) <= chance;\r\n    }\r\n\r\n    getTimeString(): string {\r\n        let timeRemaining = this.settings.timeLimit - (Date.now() - this.startTime);\r\n        let time = new Date(timeRemaining < 0 ? 0 : timeRemaining);\r\n\r\n        return `${this.settings.timeLimitText} ${time.getUTCMinutes()}:${time.getUTCSeconds() < 10 ? '0' : ''}${time.getUTCSeconds()}`;\r\n    }\r\n\r\n    postEvent(type: string, data: any = {}): void {\r\n        console.log('post event: ' + type, data);\r\n\r\n        window.parent.postMessage({\r\n            type: type,\r\n            ...data\r\n        }, '*');\r\n    }\r\n}\r\n"]}